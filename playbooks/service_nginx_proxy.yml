---
- name: setup nginx_proxy
  hosts: site
  tasks:
    - name: Install resolved
      become: true
      package:
        name: systemd-resolved
        state: latest
    - name: Enable resolved
      become: true
      systemd:
        name: systemd-resolved
        enabled: true
        state: started
    - name: Make nginx_proxy root
      file:
        path: /home/phajas/services/nginx_proxy
        state: directory
    - name: Make nginx_proxy conf
      file:
        path: /home/phajas/services/nginx_proxy/conf
        state: directory
    - name: Make nginx_proxy vhost
      file:
        path: /home/phajas/services/nginx_proxy/vhost
        state: directory
    - name: Make nginx_proxy html
      file:
        path: /home/phajas/services/nginx_proxy/html
        state: directory
    - name: Make nginx_proxy dhparam
      file:
        path: /home/phajas/services/nginx_proxy/dhparam
        state: directory
    - name: Make nginx_proxy certs
      file:
        path: /home/phajas/services/nginx_proxy/certs
        state: directory
    - name: Copy over config
      copy:
        src: ../configs/nginx_proxy/peter.conf
        dest: /home/phajas/services/nginx_proxy/peter.conf
    - name: Create nginx_proxy Container
      containers.podman.podman_container:
        name: nginx_proxy
        image: docker.io/nginxproxy/nginx-proxy:1.6
        restart_policy: always
        volumes:
        - /home/phajas/services/nginx_proxy/conf:/etc/nginx/conf.d
        - /home/phajas/services/nginx_proxy/vhost:/etc/nginx/vhost.d
        - /home/phajas/services/nginx_proxy/html:/usr/share/nginx/html
        - /home/phajas/services/nginx_proxy/dhparam:/etc/nginx/dhparam
        - /home/phajas/services/nginx_proxy/certs:/etc/nginx/certs:ro
        - /home/phajas/services/nginx_proxy/peter.conf:/etc/nginx/conf.d/peter.conf:ro,z
        - /run/user/1000/podman/podman.sock:/tmp/docker.sock:ro,z
        ports:
        - "80:80"
        - "443:443"
        network:
        - podman
        privileged: true
    - name: Make acme.sh root
      file:
        path: /home/phajas/services/nginx_proxy/acme.sh
        state: directory
    - name: Create acme-companion Container
      containers.podman.podman_container:
        name: acme_companion
        image: docker.io/nginxproxy/acme-companion
        volumes:
        - /home/phajas/services/nginx_proxy/conf:/etc/nginx/conf.d
        - /home/phajas/services/nginx_proxy/vhost:/etc/nginx/vhost.d
        - /home/phajas/services/nginx_proxy/html:/usr/share/nginx/html
        - /home/phajas/services/nginx_proxy/dhparam:/etc/nginx/dhparam
        - /home/phajas/services/nginx_proxy/certs:/etc/nginx/certs
        - /home/phajas/services/nginx_proxy/acme.sh:/etc/acme.sh
        - /run/user/1000/podman/podman.sock:/var/run/docker.sock:ro,z
        env:
          NGINX_PROXY_CONTAINER: nginx_proxy
        network:
        - podman
        privileged: true
# - this does not seem to be required on debian
# - name: nginx_proxy firewall rules
#   hosts: site
#   become: true
#   tasks:
#     - ansible.posix.firewalld:
#         zone: FedoraServer
#         port: 80/tcp
#         state: enabled
#     - ansible.posix.firewalld:
#         zone: FedoraServer
#         port: 443/tcp
#         state: enabled
